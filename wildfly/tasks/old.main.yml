---
# tasks file for wildfly

- name: Check that Java is present
  yum:
    name: "{{ java_version }}"
    state: present
- name: Add a System user that runs the wildfly process
  user:
    name: "{{ system_user }}"
    state: present
    system: yes

- name: Copy the zip file to the remote server and unzip 
  unarchive:
    src: "{{ pkg_location | default('files') }}/{{ wildfly_zip }}"
    dest: "{{ install_location }}"
    owner: "{{ system_user }}"
    group: "{{ system_user }}"
    creates: "{{ install_location }}{{ wildfly_zip[:-4] }}/"
    

- name: Copy the init script to /etc/init.d/
  copy:
    src: "{{ install_location }}{{ wildfly_zip[:-4] }}/docs/contrib/scripts/init.d/wildfly-init-redhat.sh"
    dest: /etc/init.d/{{ service_name }}
    mode: 0755
    remote_src: yes

- name: Add wildfly admin user
  shell: "./add-user.sh -u {{ wildfly_admin_user }} -p {{ wildfly_admin_pass }} "
  args:
    chdir: "{{ install_location }}{{ wildfly_zip[:-4] }}/bin/"
  ignore_errors: yes

- name: reload daemon
  systemd:
    daemon_reload: yes

- name: copy the xml config
  template:
    src: templates/{{ wildfly_host_config }}
    dest: "{{ wildfly_home }}{{ wildfly_mode }}/configuration/"
  notify: restart wildfly

- name: copy the wildfly config to /etc/default/
  template:
    src: templates/wildfly
    dest: /etc/default/

- name: Start firewall
  service:
    name: firewalld
    state: started 
  tags:
    - firewall

- name: Configure firewall
  firewalld:
    port: "{{ item.port }}"
    permanent: yes
    immediate: yes
    state: "{{ item.state }}"
  loop: "{{ wildfly_firewall }}"
  tags:
    - firewall

    ##### datasources configs
- name: copy the jboss cli scripts
  template:
    src: templates/{{ item }}
    dest: "{{ install_location }}{{ wildfly_zip[:-4] }}/bin/"
  loop:
    - add_datasource_driver.cli
    - add_module.cli

- name: copy the jdbc oracle dirver
  copy:
    src: files/ojdbc6.jar
    dest: "{{ wildfly_home }}"

- name: Add jdbc driver as a module
  shell: './jboss-cli.sh --file="add_module.cli"'
  args:
      chdir: "{{ install_location }}{{ wildfly_zip[:-4] }}/bin/"
  ignore_errors: yes

- name: define the driver
  shell: "./jboss-cli.sh -c --controller={{ ansible_facts.default_ipv4.address}} --file=add_datasource_driver.cli" 
  args:
      chdir: "{{ install_location }}{{ wildfly_zip[:-4] }}/bin/"
  ignore_errors: yes


- name: Start Wildfly
  service:
    name: "{{ service_name }}"
    state: started
